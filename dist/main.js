(()=>{"use strict";var t,e=new Uint8Array(16);function n(){if(!t&&!(t="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||"undefined"!=typeof msCrypto&&"function"==typeof msCrypto.getRandomValues&&msCrypto.getRandomValues.bind(msCrypto)))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return t(e)}const s=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i,a=function(t){return"string"==typeof t&&s.test(t)};for(var o=[],d=0;d<256;++d)o.push((d+256).toString(16).substr(1));const c=function(t,e,s){var d=(t=t||{}).random||(t.rng||n)();if(d[6]=15&d[6]|64,d[8]=63&d[8]|128,e){s=s||0;for(var c=0;c<16;++c)e[s+c]=d[c];return e}return function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=(o[t[e+0]]+o[t[e+1]]+o[t[e+2]]+o[t[e+3]]+"-"+o[t[e+4]]+o[t[e+5]]+"-"+o[t[e+6]]+o[t[e+7]]+"-"+o[t[e+8]]+o[t[e+9]]+"-"+o[t[e+10]]+o[t[e+11]]+o[t[e+12]]+o[t[e+13]]+o[t[e+14]]+o[t[e+15]]).toLowerCase();if(!a(n))throw TypeError("Stringified UUID is invalid");return n}(d)},i=function(){function t(t){this.classList.toggle("fa-square"),this.classList.toggle("fa-square-check")}function e(t){this.parentElement.childNodes[1].classList.toggle("crossed")}function n(t){const e=this.nextElementSibling.getAttribute("uuid"),n=JSON.parse(localStorage.getItem("allProjects"));n.forEach((t=>{s(t,"project"),t.todos.forEach((t=>s(t,"todo")))}));const a=document.querySelector(".active");if("Inbox"===a.id)for(let t=0;t<n.length;t++){const s=n[t].todos.find((t=>t.uuid===e));if(s){s.changeStatus(),localStorage.setItem("allProjects",JSON.stringify(n));break}}else n.find((t=>t.name===a.id)).todos.find((t=>t.uuid===e)).changeStatus(),localStorage.setItem("allProjects",JSON.stringify(n))}function s(t,e){t.status&&Object.assign(t,{changeStatus(){"new"===this.status?this.status="completed":"completed"===this.status&&(this.status="new")}}),Object.defineProperty(t,"uuid",{get(){return this._uuid},set(t){this._uuid=`${e}-`+t},enumerable:!0,configurable:!0})}return{crossTodo:function(s){t.call(this),e.call(this),n.call(this)}}}(),r=i,l=function(){function t(t,e){t.status&&Object.assign(t,{changeStatus(){"new"===this.status?this.status="completed":"completed"===this.status&&(this.status="new")}}),Object.defineProperty(t,"uuid",{get(){return this._uuid},set(t){this._uuid=`${e}-`+t},enumerable:!0,configurable:!0})}return{deleteTodo:function(){const e=JSON.parse(localStorage.getItem("allProjects"));e.forEach((e=>{t(e,"project"),e.todos.forEach((e=>t(e,"todo")))}));const n=this.previousSibling.getAttribute("uuid"),s=document.querySelector(".active");if("Inbox"===s.id)for(let t=0;t<e.length;t++){const s=e[t].todos.find((t=>t.uuid===n));if(s){e[t].todos.splice(e[t].todos.indexOf(s),1),localStorage.setItem("allProjects",JSON.stringify(e)),this.closest(".todo").remove();break}}else{const t=e.find((t=>t.uuid===s.getAttribute("uuid"))),a=t.todos.find((t=>t.uuid===n));t.todos.splice(t.todos.indexOf(a),1),localStorage.setItem("allProjects",JSON.stringify(e)),this.closest(".todo").remove()}}}}(),u=l,m=function(){class t{constructor(t){this.content=t,this.status="new"}get uuid(){return this._uuid}set uuid(t){return this._uuid="todo-"+t}changeStatus=()=>{"new"===this.status?this.status="completed":"completed"===this.status&&(this.status="new")}}function e(e){let n=document.getElementById("newTodoContent");const s=new t(n.value);s.uuid="todo-"+c();const a=JSON.parse(localStorage.getItem("allProjects")),o=document.querySelector(".active");a.find((t=>t.name===o.id)).todos.push(s),localStorage.setItem("allProjects",JSON.stringify(a)),dataPanel.querySelector(".todos").appendChild(function(t){const e=document.createElement("i"),n=document.createElement("span");n.classList.add("todoContent"),n.textContent=t.content,n.setAttribute("uuid",t.uuid),e.classList.add("fa-solid"),e.addEventListener("click",r.crossTodo);const s=document.createElement("li");s.classList.add("todo"),s.appendChild(e),s.appendChild(n),"new"===t.status?(e.classList.add("fa-square"),n.classList.remove("crossed")):"completed"===t.status&&(e.classList.add("fa-square-check"),n.classList.add("crossed"));const a=document.createElement("i");return a.classList.add("fa-solid"),a.classList.add("fa-circle-minus"),a.addEventListener("click",u.deleteTodo),s.appendChild(a),s}(s)),this.closest(".modalContainer").remove()}return{addTodo:function(){this.parentElement.appendChild(function(){const t=document.createElement("div");return t.classList.add("modalContainer"),t.classList.add("fadeIn"),t.appendChild(function(){const t=document.createElement("div");t.classList.add("modal"),t.classList.add("flex");const n=document.createElement("label");n.setAttribute("for","newTodoContent"),n.classList.add("label"),n.textContent="Add your new task:";const s=document.createElement("input");s.id="newTodoContent",s.type="text";const a=document.createElement("button");return a.classList.add("submit"),a.textContent="Submit",a.addEventListener("click",e),t.appendChild(n),t.appendChild(s),t.appendChild(a),t}()),t}())}}}(),p=function(){function t(t,e){const n=document.createElement("i"),s=document.createElement("span");s.classList.add("todoContent"),s.textContent=e.content,s.setAttribute("uuid",e.uuid),n.classList.add("fa-solid"),n.addEventListener("click",r.crossTodo);const a=document.createElement("li");a.classList.add("todo"),a.appendChild(n),a.appendChild(s),"new"===e.status?(n.classList.add("fa-square"),s.classList.remove("crossed")):"completed"===e.status&&(n.classList.add("fa-square-check"),s.classList.add("crossed"));const o=document.createElement("i");o.classList.add("fa-solid"),o.classList.add("fa-circle-minus"),o.addEventListener("click",u.deleteTodo),a.appendChild(o),t.appendChild(a)}function e(){const e=JSON.parse(localStorage.getItem("allProjects")),s=document.createElement("ul");return s.classList.add("todos"),e.length<2?function(){const t=document.createElement("p");return t.classList.add("guide"),t.textContent="Create a new project to get started.",t}():(e.forEach((e=>{e.todos.forEach((e=>{n(e,"todo"),t(s,e)}))})),s)}function n(t,e){t.status&&Object.assign(t,{changeStatus(){"new"===this.status?this.status="completed":"completed"===this.status&&(this.status="new")}}),Object.defineProperty(t,"uuid",{get(){return this._uuid},set(t){this._uuid=`${e}-`+t},enumerable:!0,configurable:!0})}return{displayTodos:function(s){!function(t){const e=Array.from(document.getElementsByClassName("project")),n=document.getElementById(`${t.target.id}`);e.forEach((t=>{t.classList.remove("active")})),n.classList.add("active")}(s),dataPanel.innerHTML="","Inbox"===s.target.id?dataPanel.appendChild(e()):(dataPanel.appendChild(function(e){const s=JSON.parse(localStorage.getItem("allProjects")),a=document.createElement("ul");return a.classList.add("todos"),s.forEach((t=>{n(t,"project"),t.todos.forEach((t=>n(t,"todo")))})),s.find((t=>t.uuid===e.target.getAttribute("uuid"))).todos.forEach((e=>t(a,e))),a}(s)),dataPanel.appendChild(function(){const t=document.createElement("div");t.classList.add("addTodoContainer");const e=document.createElement("button");return e.textContent="ADD",e.classList.add("addTodoBtn"),e.addEventListener("click",m.addTodo),t.appendChild(e),t}()))},createInboxTodos:e}}(),f=function(){function t(t){this.parentElement.appendChild(function(){const t=document.createElement("div");t.classList.add("modalContainer"),t.classList.add("fadeIn");const s=document.createElement("div");return s.classList.add("modal"),s.appendChild(function(){const t=document.createElement("p");return t.classList.add("alert"),t.textContent="Are you sure? Deleting project will delete all todos belong to it!",t}()),s.appendChild(function(){const t=document.createElement("div");return t.classList.add("actions"),t.appendChild(function(){const t=document.createElement("button");return t.textContent="No",t.classList.add("cancel"),t.addEventListener("click",e),t}()),t.appendChild(function(){const t=document.createElement("button");return t.textContent="Yes",t.classList.add("agree"),t.addEventListener("click",n),t}()),t}()),t.appendChild(s),t}())}function e(t){const e=this.closest(".modalContainer");e.classList.remove("fadeIn"),e.classList.add("fadeOut"),e.addEventListener("animationend",(()=>e.remove()))}function n(n){const o=JSON.parse(localStorage.getItem("allProjects"));o.forEach((t=>c(t,"project")));const i=this.closest(".listContainer"),r=this.closest(".projects"),l=this.closest(".projectsContainer"),u=o.findIndex((t=>t.uuid===i.firstChild.getAttribute("uuid")));o.splice(u,1),localStorage.setItem("allProjects",JSON.stringify(o)),function(t){const e=Array.from(document.getElementsByClassName("project")),n=document.getElementById("Inbox");e.forEach((t=>{t.classList.remove("active")})),n.classList.add("active")}(),s(dataPanel),l.remove(),r.insertBefore(function(){const e=JSON.parse(localStorage.getItem("allProjects"));e.forEach((t=>c(t,"project")));const n=document.createElement("ul");return n.classList.add("projectsContainer"),e.forEach((e=>{if("default"!==e.name){const s=document.createElement("li");s.classList.add("listContainer");const a=document.createElement("span");a.textContent=e.name,a.classList.add("project"),a.id=e.name,a.setAttribute("uuid",e.uuid),a.addEventListener("click",d);const o=document.createElement("i");o.classList.add("fa-solid"),o.classList.add("fa-circle-minus"),o.addEventListener("click",t),n.appendChild(s),s.appendChild(a),s.appendChild(o)}})),n}(),r.lastChild),dataPanel.appendChild(a()),e.bind(this)()}function s(t){return t.innerHTML=""}function a(){const t=JSON.parse(localStorage.getItem("allProjects")),e=document.createElement("ul");return e.classList.add("todos"),t.length<2?function(){const t=document.createElement("p");return t.classList.add("guide"),t.textContent="Create a new project to get started.",t}():(t.forEach((t=>{t.todos.forEach((t=>{c(t,"todo"),o(e,t)}))})),e)}function o(t,e){const n=document.createElement("i"),s=document.createElement("span");s.classList.add("todoContent"),s.textContent=e.content,s.setAttribute("uuid",e.uuid),n.classList.add("fa-solid"),n.addEventListener("click",r.crossTodo);const a=document.createElement("li");a.appendChild(n),a.appendChild(s),"new"===e.status?(n.classList.add("fa-square"),s.classList.remove("crossed")):"completed"===e.status&&(n.classList.add("fa-square-check"),s.classList.add("crossed")),t.appendChild(a)}function d(t){!function(t){const e=Array.from(document.getElementsByClassName("project")),n=document.getElementById(`${t.target.id}`);e.forEach((t=>{t.classList.remove("active")})),n.classList.add("active")}(t),s(dataPanel),"Inbox"===t.target.id?dataPanel.appendChild(a()):dataPanel.appendChild(function(t){const e=JSON.parse(localStorage.getItem("allProjects")),n=document.createElement("ul");return n.classList.add("todos"),e.forEach((t=>{c(t,"project"),t.todos.forEach((t=>c(t,"todo")))})),e.find((e=>e.uuid===t.target.getAttribute("uuid"))).todos.forEach((t=>o(n,t))),n}(t))}function c(t,e){t.status&&Object.assign(t,{changeStatus(){"new"===this.status?this.status="completed":"completed"===this.status&&(this.status="new")}}),Object.defineProperty(t,"uuid",{get(){return this._uuid},set(t){this._uuid=`${e}-`+t},enumerable:!0,configurable:!0})}return{deleteProject:t}}(),h=function(){class t{constructor(t){this.name=t,this.todos=[]}get uuid(){return this._uuid}set uuid(t){return this._uuid="project-"+t}}function e(e){let o=document.getElementById("newProjectName");const i=new t(o.value);i.uuid="project-"+c();const r=JSON.parse(localStorage.getItem("allProjects")),l=this.closest(".projects"),u=this.closest(".projects"),m=u.children[1];u.removeChild(m),r.push(i),localStorage.setItem("allProjects",JSON.stringify(r)),s(dataPanel),m.remove(),function(t){const e=Array.from(document.getElementsByClassName("project")),n=document.getElementById("Inbox");e.forEach((t=>{t.classList.remove("active")})),n.classList.add("active")}(),l.insertBefore(function(){const t=JSON.parse(localStorage.getItem("allProjects"));t.forEach((t=>d(t,"project")));const e=document.createElement("ul");return e.classList.add("projectsContainer"),t.forEach((t=>{if("default"!==t.name){const s=document.createElement("li");s.classList.add("listContainer");const a=document.createElement("span");a.textContent=t.name,a.classList.add("project"),a.id=t.name,a.setAttribute("uuid",t.uuid),a.addEventListener("click",n);const o=document.createElement("i");o.classList.add("fa-solid"),o.classList.add("fa-circle-minus"),o.addEventListener("click",f.deleteProject),e.appendChild(s),s.appendChild(a),s.appendChild(o)}})),e}(),l.lastChild),dataPanel.appendChild(a()),this.closest(".modalContainer").remove()}function n(t){!function(t){const e=Array.from(document.getElementsByClassName("project")),n=document.getElementById(`${t.target.id}`);e.forEach((t=>{t.classList.remove("active")})),n.classList.add("active")}(t),s(dataPanel),"Inbox"===t.target.id?dataPanel.appendChild(a()):(dataPanel.appendChild(function(t){const e=JSON.parse(localStorage.getItem("allProjects")),n=document.createElement("ul");return n.classList.add("todos"),e.forEach((t=>{d(t,"project"),t.todos.forEach((t=>d(t,"todo")))})),e.find((e=>e.uuid===t.target.getAttribute("uuid"))).todos.forEach((t=>o(n,t))),n}(t)),dataPanel.appendChild(function(){const t=document.createElement("div");t.classList.add("addTodoContainer");const e=document.createElement("button");return e.textContent="ADD",e.classList.add("addTodoBtn"),e.addEventListener("click",m.addTodo),t.appendChild(e),t}()))}function s(t){t.innerHTML=""}function a(){const t=JSON.parse(localStorage.getItem("allProjects")),e=document.createElement("ul");return e.classList.add("todos"),t.forEach((t=>{t.todos.forEach((t=>{d(t,"todo"),o(e,t)}))})),e}function o(t,e){const n=document.createElement("i"),s=document.createElement("span");s.classList.add("todoContent"),s.textContent=e.content,s.setAttribute("uuid",e.uuid),n.classList.add("fa-solid"),n.addEventListener("click",r.crossTodo);const a=document.createElement("li");a.classList.add("todo"),a.appendChild(n),a.appendChild(s),"new"===e.status?(n.classList.add("fa-square"),s.classList.remove("crossed")):"completed"===e.status&&(n.classList.add("fa-square-check"),s.classList.add("crossed"));const o=document.createElement("i");o.classList.add("fa-solid"),o.classList.add("fa-circle-minus"),o.addEventListener("click",deleteTodo.deleteTodo),a.appendChild(o),t.appendChild(a)}function d(t,e){t.status&&Object.assign(t,{changeStatus(){"new"===this.status?this.status="completed":"completed"===this.status&&(this.status="new")}}),Object.defineProperty(t,"uuid",{get(){return this._uuid},set(t){this._uuid=`${e}-`+t},enumerable:!0,configurable:!0})}return{addProject:function(t){this.parentElement.appendChild(function(){const t=document.createElement("div");return t.classList.add("modalContainer"),t.classList.add("fadeIn"),t.appendChild(function(){const t=document.createElement("div");t.classList.add("modal"),t.classList.add("flex");const n=document.createElement("label");n.setAttribute("for","newProjectName"),n.classList.add("label"),n.textContent="Enter the name for the project:";const s=document.createElement("input");s.id="newProjectName",s.type="text";const a=document.createElement("button");return a.classList.add("submit"),a.textContent="Submit",a.addEventListener("click",e),t.appendChild(n),t.appendChild(s),t.appendChild(a),t}()),t}())}}}();!function(){class t{constructor(t){this.name=t,this.todos=[]}get uuid(){return this._uuid}set uuid(t){return this._uuid="project-"+t}}const e=document.getElementById("content");!function(){if(!localStorage.getItem("allProjects")||null===localStorage.getItem("allProjects")){const e=new t("default"),n=[];n.push(e),localStorage.setItem("allProjects",JSON.stringify(n))}e.appendChild(function(t){const e=document.createElement("header");e.classList.add("header");const n=document.createElement("h2");return n.textContent=t,n.classList.add("siteTitle"),e.appendChild(n),e}("JustDoIt")),e.appendChild(function(){const t=document.createElement("main"),e=function(){const t=document.createElement("div");return t.id="controlPanel",t}(),n=function(){const t=document.createElement("div");return t.id="dataPanel",t}();t.appendChild(e),t.appendChild(n);const s=function(){const t=document.createElement("div");return t.classList.add("inbox"),t.classList.add("border"),t.addEventListener("click",p.displayTodos),t}();s.appendChild(function(){const t=document.createElement("h3");return t.textContent="Inbox",t.classList.add("project"),t.classList.add("active"),t.classList.add("projectHeader"),t.id="Inbox",t}()),e.appendChild(s);const a=function(){const t=document.createElement("div");return t.classList.add("projects"),t}();return a.appendChild(function(){const t=document.createElement("h3");return t.textContent="Projects",t.classList.add("projectHeader"),t.classList.add("border"),t}()),a.appendChild(function(){const t=JSON.parse(localStorage.getItem("allProjects"));t.forEach((t=>{return(e=t).status&&Object.assign(e,{changeStatus(){"new"===this.status?this.status="completed":"completed"===this.status&&(this.status="new")}}),void Object.defineProperty(e,"uuid",{get(){return this._uuid},set(t){this._uuid="project-"+t},enumerable:!0,configurable:!0});var e}));const e=document.createElement("ul");return e.classList.add("projectsContainer"),t.forEach((t=>{if("default"!==t.name){const n=document.createElement("li");n.classList.add("listContainer");const s=document.createElement("span");s.textContent=t.name,s.classList.add("project"),s.id=t.name,s.setAttribute("uuid",t.uuid),s.addEventListener("click",p.displayTodos);const a=document.createElement("i");a.classList.add("fa-solid"),a.classList.add("fa-circle-minus"),a.addEventListener("click",f.deleteProject),e.appendChild(n),n.appendChild(s),n.appendChild(a)}})),e}()),a.appendChild(function(){const t=document.createElement("div");t.classList.add("newProjectContainer");const e=document.createElement("button");return e.textContent="NEW PROJECT",e.classList.add("newProjectBtn"),e.addEventListener("click",h.addProject),t.appendChild(e),t}()),e.appendChild(a),n.appendChild(p.createInboxTodos()),t}()),e.appendChild(function(t){const e=document.createElement("footer");e.classList.add("footer");const n=document.createElement("p");return n.textContent=`© by ${t}`,n.classList.add("copyright"),e.appendChild(n),e}("Zachary Truong"))}()}()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,