(()=>{var t={471:()=>{!function(){const t=[];class e{constructor(t,e){this.name=t,this.todos=e}}class n{constructor(t){this.content=t}}const o=new e("Cleaning",[]),a=new e("Laundry",[]),c=new e("Shopping",[]);t.push(o),t.push(a),t.push(c);const s=new n("Sweeping the floor."),d=new n("Vacuuming the floor."),r=new n("Washing the filter."),i=new n("Buy new necklace."),l=new n("Put clothes in washer machine."),u=new n("Put clothes in dryer.");o.todos.push(s),o.todos.push(d),o.todos.push(r),a.todos.push(l),a.todos.push(u),c.todos.push(i),function(t){var e;try{e=window.localStorage;var n="__storage_test__";return e.setItem(n,n),e.removeItem(n),!0}catch(t){return t instanceof DOMException&&(22===t.code||1014===t.code||"QuotaExceededError"===t.name||"NS_ERROR_DOM_QUOTA_REACHED"===t.name)&&e&&0!==e.length}}()&&localStorage.setItem("allProjects",JSON.stringify(t))}()}},e={};function n(o){var a=e[o];if(void 0!==a)return a.exports;var c=e[o]={exports:{}};return t[o](c,c.exports,n),c.exports}(()=>{"use strict";const t=function(){function t(t){const e=JSON.parse(localStorage.getItem("allProjects")),n=document.createElement("ul");return n.classList.add("todos"),e.forEach((t=>{t.todos.forEach((t=>{const e=document.createElement("li");e.textContent=t.content,n.appendChild(e)}))})),n}return{displayTodos:function(e){!function(t){const e=Array.from(document.getElementsByClassName("project")),n=document.getElementById(`${t.target.id}`);e.forEach((t=>{t.classList.remove("active")})),n.classList.add("active")}(e),dataPanel.innerHTML="","Inbox"===e.target.id?dataPanel.appendChild(t()):dataPanel.appendChild(function(t){const e=JSON.parse(localStorage.getItem("allProjects")),n=document.createElement("ul");return n.classList.add("todos"),e.find((e=>e.name===t.target.id)).todos.forEach((t=>{const e=document.createElement("li");e.textContent=t.content,n.appendChild(e)})),n}(e))},createInboxTodos:t}}();n(471),function(){const e=document.getElementById("content");e.appendChild(function(t){const e=document.createElement("header");e.classList.add("header");const n=document.createElement("h2");return n.textContent=t,n.classList.add("siteTitle"),e.appendChild(n),e}("JustDoIt")),e.appendChild(function(){const e=document.createElement("main"),n=function(){const t=document.createElement("div");return t.id="controlPanel",t}(),o=function(){const t=document.createElement("div");return t.id="dataPanel",t}();e.appendChild(n),e.appendChild(o);const a=function(){const e=document.createElement("div");return e.classList.add("inbox"),e.classList.add("border"),e.addEventListener("click",t.displayTodos),e}(),c=function(){const t=document.createElement("h3");return t.textContent="Inbox",t.classList.add("project"),t.classList.add("active"),t.classList.add("projectHeader"),t.id="Inbox",t}();a.appendChild(c),n.appendChild(a);const s=function(){const t=document.createElement("div");return t.classList.add("projects"),t}(),d=function(){const t=document.createElement("h3");return t.textContent="Projects",t.classList.add("projectHeader"),t.classList.add("border"),t}(),r=function(){const e=JSON.parse(localStorage.getItem("allProjects")),n=document.createElement("ul");return n.classList.add("projectsContainer"),e.forEach((e=>{const o=document.createElement("li");o.classList.add("listContainer");const a=document.createElement("span");a.textContent=e.name,a.classList.add("project"),a.id=e.name,a.addEventListener("click",t.displayTodos);const c=document.createElement("i");c.classList.add("fa-solid"),c.classList.add("fa-circle-minus"),n.appendChild(o),o.appendChild(a),o.appendChild(c)})),n}();return s.appendChild(d),s.appendChild(r),n.appendChild(s),e}()),dataPanel.appendChild(t.createInboxTodos()),e.appendChild(function(t){const e=document.createElement("footer");e.classList.add("footer");const n=document.createElement("p");return n.textContent=`Â© by ${t}`,n.classList.add("copyright"),e.appendChild(n),e}("Zachary Truong"))}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,