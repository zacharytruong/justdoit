(()=>{var t={471:()=>{!function(){const t=[];class e{constructor(t,e){this.name=t,this.todos=e}}class n{constructor(t){this.content=t}}const o=new e("Cleaning",[]),a=new e("Laundry",[]),s=new e("Shopping",[]);t.push(o),t.push(a),t.push(s);const c=new n("Sweeping the floor."),d=new n("Vacuuming the floor."),i=new n("Washing the filter."),r=new n("Buy new necklace."),l=new n("Put clothes in washer machine."),u=new n("Put clothes in dryer.");o.todos.push(c),o.todos.push(d),o.todos.push(i),a.todos.push(l),a.todos.push(u),s.todos.push(r),function(t){var e;try{e=window.localStorage;var n="__storage_test__";return e.setItem(n,n),e.removeItem(n),!0}catch(t){return t instanceof DOMException&&(22===t.code||1014===t.code||"QuotaExceededError"===t.name||"NS_ERROR_DOM_QUOTA_REACHED"===t.name)&&e&&0!==e.length}}()&&localStorage.setItem("allProjects",JSON.stringify(t))}()}},e={};function n(o){var a=e[o];if(void 0!==a)return a.exports;var s=e[o]={exports:{}};return t[o](s,s.exports,n),s.exports}(()=>{"use strict";const t=function(){function t(t){const e=JSON.parse(localStorage.getItem("allProjects")),n=document.createElement("ul");return n.classList.add("todos"),e.forEach((t=>{t.todos.forEach((t=>{const e=document.createElement("li");e.textContent=t.content,n.appendChild(e)}))})),n}function e(t){const e=JSON.parse(localStorage.getItem("allProjects")),n=document.createElement("ul");return n.classList.add("todos"),e.find((e=>e.name===t.target.id)).todos.forEach((t=>{const e=document.createElement("li");e.textContent=t.content,n.appendChild(e)})),n}return{displayTodos:function(n){!function(t){const e=Array.from(document.getElementsByClassName("project")),n=document.getElementById(`${t.target.id}`);e.forEach((t=>{t.classList.remove("active")})),n.classList.add("active")}(n),dataPanel.innerHTML="","Inbox"===n.target.id?dataPanel.appendChild(t()):dataPanel.appendChild(e(n))},createInboxTodos:t,createProjectTodos:e}}(),e=function(){function t(t){this.closest(".modalContainer").classList.remove("fadeIn"),this.closest(".modalContainer").classList.add("fadeOut"),this.closest(".modalContainer").addEventListener("animationend",(()=>{n.bind(this)()}))}function e(t){const e=JSON.parse(localStorage.getItem("allProjects")),o=this.closest(".listContainer"),a=e.findIndex((t=>t.name===o.firstChild.id));var s;e.splice(a,1),s=e,localStorage.setItem("allProjects",JSON.stringify(s)),n.bind(this)()}function n(t){const e=this.closest(".listContainer");e.removeChild(e.lastChild)}return{deleteProject:function(n){this.parentElement.appendChild(function(){const n=document.createElement("div");n.classList.add("modalContainer"),n.classList.add("fadeIn");const o=document.createElement("div");return o.classList.add("modal"),o.appendChild(function(){const t=document.createElement("p");return t.classList.add("alert"),t.textContent="Are you sure? Deleting project will delete all todos belong to it!",t}()),o.appendChild(function(){const n=document.createElement("div");return n.classList.add("actions"),n.appendChild(function(){const e=document.createElement("button");return e.textContent="No",e.classList.add("cancel"),e.addEventListener("click",t),e}()),n.appendChild(function(){const t=document.createElement("button");return t.textContent="Yes",t.classList.add("agree"),t.addEventListener("click",e),t}()),n}()),n.appendChild(o),n}())}}}();n(471),function(){const n=document.getElementById("content");n.appendChild(function(t){const e=document.createElement("header");e.classList.add("header");const n=document.createElement("h2");return n.textContent=t,n.classList.add("siteTitle"),e.appendChild(n),e}("JustDoIt")),n.appendChild(function(){const n=document.createElement("main"),o=function(){const t=document.createElement("div");return t.id="controlPanel",t}(),a=function(){const t=document.createElement("div");return t.id="dataPanel",t}();n.appendChild(o),n.appendChild(a);const s=function(){const e=document.createElement("div");return e.classList.add("inbox"),e.classList.add("border"),e.addEventListener("click",t.displayTodos),e}(),c=function(){const t=document.createElement("h3");return t.textContent="Inbox",t.classList.add("project"),t.classList.add("active"),t.classList.add("projectHeader"),t.id="Inbox",t}();s.appendChild(c),o.appendChild(s);const d=function(){const t=document.createElement("div");return t.classList.add("projects"),t}(),i=function(){const t=document.createElement("h3");return t.textContent="Projects",t.classList.add("projectHeader"),t.classList.add("border"),t}(),r=function(){const n=JSON.parse(localStorage.getItem("allProjects")),o=document.createElement("ul");return o.classList.add("projectsContainer"),n.forEach((n=>{const a=document.createElement("li");a.classList.add("listContainer");const s=document.createElement("span");s.textContent=n.name,s.classList.add("project"),s.id=n.name,s.addEventListener("click",t.displayTodos);const c=document.createElement("i");c.classList.add("fa-solid"),c.classList.add("fa-circle-minus"),c.addEventListener("click",e.deleteProject),o.appendChild(a),a.appendChild(s),a.appendChild(c)})),o}();return d.appendChild(i),d.appendChild(r),o.appendChild(d),n}()),dataPanel.appendChild(t.createInboxTodos()),n.appendChild(function(t){const e=document.createElement("footer");e.classList.add("footer");const n=document.createElement("p");return n.textContent=`Â© by ${t}`,n.classList.add("copyright"),e.appendChild(n),e}("Zachary Truong"))}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,